#!/usr/bin/perl -w
# $Id: f77makedep,v 1.1.1.1 2003/06/17 10:15:23 hal Exp $
#
# f77makedep: create dependencies from Fortran include files
#



use strict;


my $progname = $0;
$progname =~ s{^.*/}{};

my $genstring = "# --- automatically generated by $progname, " .
  "do not edit ---";
my $prefix = "\$(INCLUDEDIR)";
my $makefile = "";
my $makefile_contents = "";

my @make_filenames = qw/Makefile makefile/;



# search for makefile
for my $file (@make_filenames) {
  if (-f $file) {
    $makefile = $file;
    last;
  }
}

die "$progname: no makefile found" unless $makefile;

# read makefile and discard old dependencies if present
open (MFILE, "< $makefile") or die "$progname: can't read $makefile";

while (<MFILE>) {
  last if /$genstring/;

  $makefile_contents .= $_;
}

# rewrite makefile
open (MFILE, "> $makefile") or die "$progname: can't write $makefile";

print MFILE "$makefile_contents";
print MFILE "$genstring\n";

# extract dependencies from include statements of source files and write
# dependencies into makefile
for my $file (@ARGV) {
  my @include_files = ();

  open (FFILE, "< $file") or die "$progname: can't open $file: $!\n";

  while (<FFILE>) {
    if (/^\s*include\s*["'](.*?)["']/) {
      push (@include_files, "$prefix/$1");
    }
  }

  $file =~ s{\.[fF](or|OR)?}{.o};

  if (@include_files) {
    print MFILE "$file: @include_files\n";
  }
}

